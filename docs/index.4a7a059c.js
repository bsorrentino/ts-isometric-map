var t;!function(t){class e{constructor(t,e){this.mapPos=t,this.map=e,this.screenPos={x:0,y:0}}render(){const{context:t,tile:{width:e,height:i,color:s}}=this.map;t.beginPath(),t.moveTo(this.mapPos.x-e/2,this.mapPos.y),t.lineTo(this.mapPos.x-e,this.mapPos.y+i/2),t.lineTo(this.mapPos.x-e/2,this.mapPos.y+i),t.lineTo(this.mapPos.x,this.mapPos.y+i/2),t.lineTo(this.mapPos.x-e/2,this.mapPos.y),t.stroke(),t.fillStyle=s,t.fill()}}class i{constructor(t,e,i){this.mapPos=t,this.map=e,this.screenPos=i||e.convertIsometricToScreen(t)}render(){const{x:t,y:e}=this.map.convertIsometricToScreen(this.mapPos),{context:i,tile:{width:s,height:h,color:n}}=this.map;i.beginPath(),i.moveTo(t-s/2,e-h),i.lineTo(t-s,e-h/2),i.lineTo(t-s/2,e),i.lineTo(t,e-h/2),i.lineTo(t-s/2,e-h),i.fillStyle="#555555",i.fill(),i.beginPath(),i.moveTo(t-s,e-h/2),i.lineTo(t-s,e+h/2),i.lineTo(t-s/2,e+h),i.lineTo(t-s/2,e),i.lineTo(t-s,e-h/2),i.fillStyle="#444444",i.fill(),i.beginPath(),i.moveTo(t-s/2,e),i.lineTo(t,e-h/2),i.lineTo(t,e+h/2),i.lineTo(t-s/2,e+h),i.lineTo(t-s/2,e),i.fillStyle="#777777",i.fill()}}t.Map=class{constructor(t){this.screenPos={x:0,y:0},this.renderLayers=[[],[]],this._addTile=(t,i=0)=>{const s=new e(t,this);return this.renderLayers[i].push(s),s},this._sortLayer=t=>this.renderLayers[t].sort(((t,e)=>{const i=t.screenPos.y-e.screenPos.y;return 0===i?e.screenPos.x-t.screenPos.x:i})),this.addPrism=(t,e=1)=>{const s=this.convertScreenToIsometric(t);if(this.isOnMap(s)){const h=new i(s,this,t);return this.renderLayers[e].push(h),this._sortLayer(e),h}},this.convertIsometricToScreen=t=>({x:(t.x-t.y)*this.tile.width/2+this.mapPos.x,y:(t.x+t.y)*this.tile.height/2+this.mapPos.y}),this.isOnMap=t=>t.x>=0&&t.x<this.map.width&&t.y>=0&&t.y<this.map.height;const s=document.getElementById(t.canvasId??"canvas");if(null==s)throw new Error("canvas is null!");const h=s.getContext("2d");if(null==h)throw new Error("2d context from canvas is null!");this._canvas=s,this.context=h,this.screenSize={width:t.screen.width,height:t.screen.height},this.map={width:t.map.width,height:t.map.height},this.tile={width:t.tile.width,height:t.tile.height,color:t.color??"#15B89A"},this.mapPos={x:this.screenSize.width/2,y:this.tile.height}}get canvas(){return this._canvas}create(){this._canvas.setAttribute("width",`${this.screenSize.width}`),this._canvas.setAttribute("height",`${this.screenSize.height}`);for(let t=0;t<this.map.width;t++)for(let e=0;e<this.map.height;e++){const i={x:(t-e)*this.tile.width/2+this.mapPos.x,y:(t+e)*this.tile.height/2+this.mapPos.y};this._addTile(i)}this.gameLoopItnterval=setInterval((()=>this.render()),500)}render(){this.renderLayers[0].forEach((t=>t.render())),this.renderLayers[1].forEach((t=>t.render()))}convertScreenToIsometric(t){const e=(t.x-this.mapPos.x)/this.tile.width,i=(t.y-this.mapPos.y)/this.tile.height;return{x:Math.floor(i+e),y:Math.floor(i-e)}}}}(t||(t={}));const e=new t.Map({screen:{width:1024,height:768},map:{width:14,height:14},tile:{width:64,height:32}});e.create(),e.canvas.addEventListener("mousedown",(t=>{const i=function(t){const e=t.target;if(null==e)return null;const i=e.getBoundingClientRect();return{x:t.clientX-i.left,y:t.clientY-i.top}}(t);null!=i&&e.addPrism(i)}),!1);
//# sourceMappingURL=index.4a7a059c.js.map
