class e{constructor(e,t,s){this.screenPos=e,this.mapPos=t,this.map=s,this.highlight=!1}compare(e){return e.highlight?-1:0}render(){const e=this.map.getTileVertex(this.screenPos),{context:t,tile:{color:s}}=this.map;t.save(),t.beginPath(),t.moveTo(e.top.x,e.top.y),t.lineTo(e.left.x,e.left.y),t.lineTo(e.bottom.x,e.bottom.y),t.lineTo(e.right.x,e.right.y),t.lineTo(e.top.x,e.top.y),t.strokeStyle="black",t.stroke(),t.fillStyle=this.highlight?"#ffff00":s,t.fill(),this.highlight&&(this._drawTileRect(),this._drawMapPos()),t.restore()}_drawMapPos(){const{context:e}=this.map,{x:t,y:s}=this.screenPos;e.fillStyle="black",e.fillText(`${this.mapPos.x},${this.mapPos.y}`,t-40,s+20)}_drawTileRect(){const{context:e,tile:{width:t,height:s}}=this.map,{topLeft:{x:i,y:o}}=this.map.getTileRect(this.screenPos);e.beginPath(),e.rect(i,o,t,s),e.stroke()}}var t,s;(s=t||(t={}))[s.NW=0]="NW",s[s.NE=1]="NE",s[s.SW=2]="SW",s[s.SE=3]="SE";class i{constructor(e){this.screenPos=e}compare(e){const t=this.screenPos.y-e.screenPos.y;return 0===t?this.screenPos.x-e.screenPos.x:t}}class o extends i{constructor(e,t){super(e),this.map=t}compare(e){const t=this.screenPos.y-e.screenPos.y;return 0===t?this.screenPos.x-e.screenPos.x:t}render(){const{x:e,y:t}=this.screenPos,{context:s,tile:{width:i,height:o}}=this.map;s.beginPath(),s.moveTo(e-i/2,t-o),s.lineTo(e-i,t-o/2),s.lineTo(e-i/2,t),s.lineTo(e,t-o/2),s.lineTo(e-i/2,t-o),s.fillStyle="#555555",s.fill(),s.beginPath(),s.moveTo(e-i,t-o/2),s.lineTo(e-i,t+o/2),s.lineTo(e-i/2,t+o),s.lineTo(e-i/2,t),s.lineTo(e-i,t-o/2),s.fillStyle="#444444",s.fill(),s.beginPath(),s.moveTo(e-i/2,t),s.lineTo(e,t-o/2),s.lineTo(e,t+o/2),s.lineTo(e-i/2,t+o),s.lineTo(e-i/2,t),s.fillStyle="#777777",s.fill()}}class n{constructor(e,t){this.value=e,this.isDown=!1,this.isUp=!0;const s=e=>{e.key===this.value&&(this.isUp&&this.press&&this.press(),this.isDown=!0,this.isUp=!1,e.preventDefault())},i=e=>{e.key===this.value&&(this.isDown&&this.release&&this.release(),this.isDown=!1,this.isUp=!0,e.preventDefault())};t.addEventListener("keydown",s,!1),t.addEventListener("keyup",i,!1),this.unsubscribe=()=>{t.removeEventListener("keydown",s,!1),t.removeEventListener("keyup",i,!1)}}}class r{constructor(e){const t=e=>{this.press&&this.press(e),e.preventDefault()},s=e=>{this.up&&this.up(e),e.preventDefault()},i=e=>{this.move&&this.move(e),e.preventDefault()};e.addEventListener("mousedown",t,!1),e.addEventListener("mouseup",s,!1),e.addEventListener("mousemove",i,!1),this.unsubscribe=()=>{e.removeEventListener("mousedown",t,!1),e.removeEventListener("mouseup",s,!1),e.removeEventListener("mousemove",i,!1)}}getMousePosition(e){const t=e.target;if(null==t)return null;const s=t.getBoundingClientRect();return{x:e.clientX-s.left,y:e.clientY-s.top}}}const h=(e,t=document)=>new n(e,t),a=document.getElementById("debug"),c=new class{constructor(t){this.screenPos={x:0,y:0},this.renderLayers=[[],[],[]],this.images=new Map,this.clear=()=>this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this._addTile=(t,s=0)=>{const i=this.convertIsoToScreen(t),o=new e(i,t,this);return this.renderLayers[s].push(o),o},this.addEntity=(e,t=1)=>{const s=this.convertScreenToIso(e.screenPos);return!!this.isOnMap(s)&&(this.renderLayers[t].push(e),!0)},this.convertIsoToScreen=e=>({x:(e.x-e.y)*this.tile.width/2+this.mapPos.x,y:(e.x+e.y)*this.tile.height/2+this.mapPos.y}),this.getTileVertex=e=>({top:{x:e.x-this.tile.width/2,y:e.y},left:{x:e.x-this.tile.width,y:e.y+this.tile.height/2},right:{x:e.x,y:e.y+this.tile.height/2},bottom:{x:e.x-this.tile.width/2,y:e.y+this.tile.height}}),this.getTileRect=e=>({topRight:e,bottomLeft:{x:e.x-this.tile.width,y:e.y+this.tile.height},bottomRight:{x:e.x,y:e.y+this.tile.height},topLeft:{x:e.x-this.tile.width,y:e.y}}),this.isOnMap=e=>e.x>=0&&e.x<this.mapSize.width&&e.y>=0&&e.y<this.mapSize.height;const s=document.getElementById(t.canvasId??"canvas");if(null==s)throw new Error("canvas is null!");const i=s.getContext("2d");if(null==i)throw new Error("2d context from canvas is null!");this._canvas=s,this.context=i,this.screenSize={width:t.screen.width,height:t.screen.height},this.mapSize={width:t.mapSize.width,height:t.mapSize.height},this.tile={width:t.tileSize.width,height:t.tileSize.height,color:t.color??"#15B89A"},this.mapPos={x:this.screenSize.width/2,y:2*this.tile.height}}compare(e){return 0}get canvas(){return this._canvas}create(){this._canvas.setAttribute("width",`${this.screenSize.width}`),this._canvas.setAttribute("height",`${this.screenSize.height}`);for(let e=0;e<this.mapSize.width;e++)for(let t=0;t<this.mapSize.height;t++)this._addTile({x:e,y:t});this.gameLoopItnterval=setInterval((()=>this.render()),1e3/30)}render(){this.clear(),this.renderLayers[0].sort(((e,t)=>e.compare(t))).forEach((e=>e.render())),this.renderLayers[1].concat(this.renderLayers[2]).sort(((e,t)=>e.compare(t))).forEach((e=>e.render()))}_findEntity(e,t){return this.renderLayers[e].find(t)}findTileByScreenPos(e){return this._findEntity(0,((t,s)=>{const i=this.convertScreenToIso(e),{mapPos:o}=t;return o.x===i.x&&o.y===i.y}))}findTileByIsoPos(e){return this._findEntity(0,((t,s)=>{const{mapPos:i}=t;return i.x===e.x&&i.y===e.y}))}convertScreenToIso(e){const t=(e.x-this.mapPos.x)/this.tile.width,s=(e.y-this.mapPos.y)/this.tile.height;return{x:Math.floor(s+t),y:Math.floor(s-t)}}loadImages(...e){e.forEach((e=>{const t=(e=>{const t=e.split("/");if(t.length>0){const e=t[t.length-1],s=/(.+)[.](.+)$/.exec(e);if(null!=s)return s[1]}})(e);if(t){let s=new Image;s.src=e,s.onload=s=>{console.log(`image ${t} from path: ${e} loaded`,s)},this.images.set(t,s)}else console.warn(`image path: ${e} is not valid!`)}))}renderImage(e,t){const s=this.images.get(e);if(s){const{bottomLeft:{x:e,y:i}}=this.getTileRect(t);this.context.drawImage(s,e,i-s.naturalHeight)}}checkCollision(e,s,i=1,o){const n=o?this.renderLayers[i].filter(o):this.renderLayers[i],r=this.getTileVertex(e);let h;switch(s){case t.SW:case t.SE:h=e=>{const{top:t,left:s}=this.getTileVertex(e.screenPos),{x:i,y:o}=r.left;return i<t.x&&i>=s.x&&o>t.y&&o<=s.y};break;case t.NW:case t.NE:h=e=>{const{bottom:t,right:s}=this.getTileVertex(e.screenPos),{x:i,y:o}=r.right;return i>t.x&&i<=s.x&&o<t.y&&o>=s.y}}return!!h&&void 0!==n.find(h)}}({screen:{width:1024,height:800},mapSize:{width:14,height:14},tileSize:{width:64,height:32}});c.create(),c.loadImages("assets/man-ne.png","assets/man-nw.png","assets/man-se.png"," assets/man-sw.png");let l=h("ArrowLeft"),m=h("ArrowUp"),p=h("ArrowRight"),d=h("ArrowDown");const y=(g=document.body,new r(g));var g;let x;y.press=e=>{let t=y.getMousePosition(e);null!=t&&(t=c.convertScreenToIso(t),c.addEntity(new o(c.convertIsoToScreen(t),c)))},y.move=e=>{const t=y.getMousePosition(e);if(null!=t){const e=c.convertScreenToIso(t);a.innerHTML=`[${t.x},${t.y}] - [${e.x},${e.y}]`;const s=c.findTileByIsoPos(e);s&&(x&&(x.highlight=!1),x=s,x.highlight=!0)}};const u=new class extends i{constructor(e,t){super(t.convertIsoToScreen(e)),this.mapPos=e,this.map=t,this.move=null,this.currentImage="man-se"}compare(e){const t=this.screenPos.y-e.screenPos.y;return 0===t?this.screenPos.x-e.screenPos.x:t}_moveTo(e,t,s){if(this.map.isOnMap(t)){this.currentImage=s;const i=this.map.convertIsoToScreen(t);this.map.checkCollision(i,e)||(this.mapPos=t,this.screenPos=i)}}render(){switch(this.move){case t.SE:this._moveTo(t.SE,{x:this.mapPos.x+1,y:this.mapPos.y},"man-se");break;case t.SW:this._moveTo(t.SW,{x:this.mapPos.x,y:this.mapPos.y+1},"man-sw");break;case t.NE:this._moveTo(t.NE,{x:this.mapPos.x,y:this.mapPos.y-1},"man-ne");break;case t.NW:this._moveTo(t.NW,{x:this.mapPos.x-1,y:this.mapPos.y},"man-nw")}this.map.renderImage(this.currentImage,this.screenPos)}}({x:1,y:1},c);c.addEntity(u,2);const v=()=>u.move=null;l.press=()=>u.move=t.SW,p.press=()=>u.move=t.NE,m.press=()=>u.move=t.NW,d.press=()=>u.move=t.SE,l.release=v,p.release=v,d.release=v,m.release=v;
//# sourceMappingURL=index.924de437.js.map
